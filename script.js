const hana = require("@sap/hana-client");
const conn = hana.createConnection();
const traceCB = function (buf) {
  console.log(buf);
};
conn.onTrace("API=TRACE,SQL=TRACE,FLUSH,OutBufferSize=64k", traceCB);
const conn_params = {
  host: "", // replace by hana.credentials.host
  port: "443",
  currentSchema: "", // replace by hana.credentials.schema
  uid: "", // <-- replace by hana.credentials.user
  pwd: "", // <-- replace by hana.credentials.password
};

conn.connect(conn_params, function (err) {
  if (err) throw err;
  conn.exec(
      // it does work WITHOUT parameters -> // `SELECT ALIAS_1._ID AS "ALIAS_1__ID", ALIAS_1._createdAt AS "ALIAS_1__createdAt", ALIAS_1._createdBy AS "ALIAS_1__createdBy", ALIAS_1._modifiedAt AS "ALIAS_1__modifiedAt", ALIAS_1._modifiedBy AS "ALIAS_1__modifiedBy", ALIAS_1._log_ID AS "ALIAS_1__log_ID", ALIAS_1._rule_ID AS "ALIAS_1__rule_ID", ALIAS_1._state AS "ALIAS_1__state", ALIAS_1.SimplifiedCoveredTaxes AS "ALIAS_1_SimplifiedCoveredTaxes", ALIAS_1.FiscalYear AS "ALIAS_1_FiscalYear", ALIAS_1.SafeHarborDeMinimisCheck AS "ALIAS_1_SafeHarborDeMinimisCheck", ALIAS_1.Version AS "ALIAS_1_Version", ALIAS_1.RunScenario_Code AS "ALIAS_1_RunScenario_Code", ALIAS_1.RunFiscalYear AS "ALIAS_1_RunFiscalYear", ALIAS_1.CountryRegion_Code AS "ALIAS_1_CountryRegion_Code", ALIAS_1.DeMinimisRevenueForSafeHarbor AS "ALIAS_1_DeMinimisRevenueForSafeHarbor", ALIAS_1.PillarGroup_Code AS "ALIAS_1_PillarGroup_Code", ALIAS_1.ThresholdValueRevenue AS "ALIAS_1_ThresholdValueRevenue", ALIAS_1.SafeHarborETRCheck AS "ALIAS_1_SafeHarborETRCheck", ALIAS_1.RoutineProfitDifference AS "ALIAS_1_RoutineProfitDifference", ALIAS_1.SafeHarborSBIECheck AS "ALIAS_1_SafeHarborSBIECheck", ALIAS_1.TotalCarveOut AS "ALIAS_1_TotalCarveOut", ALIAS_1.ThresholdValueEBT AS "ALIAS_1_ThresholdValueEBT", ALIAS_1.ProfitBeforeIncomeTaxes AS "ALIAS_1_ProfitBeforeIncomeTaxes", ALIAS_1.SimplifiedETR AS "ALIAS_1_SimplifiedETR", ALIAS_1.GroupCurrency_Code AS "ALIAS_1_GroupCurrency_Code", ALIAS_1._function_ID AS "ALIAS_1__function_ID", b._createdAt AS "b__createdAt", b._createdBy AS "b__createdBy", b._modifiedAt AS "b__modifiedAt", b._modifiedBy AS "b__modifiedBy", b._log_ID AS "b__log_ID", b._rule_ID AS "b__rule_ID", b._state AS "b__state", b.Code AS "b_Code", b.Description AS "b_Description", '00000000-0000-0000-0000-000000000000' AS "b__function_ID", c._createdAt AS "c__createdAt", c._createdBy AS "c__createdBy", c._modifiedAt AS "c__modifiedAt", c._modifiedBy AS "c__modifiedBy", c._log_ID AS "c__log_ID", c._rule_ID AS "c__rule_ID", c._state AS "c__state", c.Description AS "c_Description", c.Code AS "c_Code", '00000000-0000-0000-0000-000000000000' AS "c__function_ID", true AS "c_IsActiveEntity", null AS "c_HasActiveEntity", null AS "c_HasDraftEntity", d._createdAt AS "d__createdAt", d._createdBy AS "d__createdBy", d._modifiedAt AS "d__modifiedAt", d._modifiedBy AS "d__modifiedBy", d._log_ID AS "d__log_ID", d._rule_ID AS "d__rule_ID", d._state AS "d__state", d.PillarCircle_Code AS "d_PillarCircle_Code", d.Code AS "d_Code", d.Description AS "d_Description", '00000000-0000-0000-0000-000000000000' AS "d__function_ID", e._createdAt AS "e__createdAt", e._createdBy AS "e__createdBy", e._modifiedAt AS "e__modifiedAt", e._modifiedBy AS "e__modifiedBy", e._log_ID AS "e__log_ID", e._rule_ID AS "e__rule_ID", e._state AS "e__state", e.Description AS "e_Description", e.Code AS "e_Code", '00000000-0000-0000-0000-000000000000' AS "e__function_ID" FROM z_Ext_SBEPS_JoinAllSH ALIAS_1 LEFT JOIN z_Ext_SBEPS_RunScenarios b ON ( b.Code = ALIAS_1.RunScenario_Code ) LEFT JOIN z_Ext_SBEPS_CountriesRegions c ON ( c.Code = ALIAS_1.CountryRegion_Code ) LEFT JOIN z_Ext_SBEPS_PillarGroups d ON ( d.Code = ALIAS_1.PillarGroup_Code ) LEFT JOIN z_Ext_SBEPS_Currencies e ON ( e.Code = ALIAS_1.GroupCurrency_Code ) ORDER BY ALIAS_1._ID ASC LIMIT 50  with parameters ('LOCALE' = 'en')`,
      // it does NOT work with parameters ...
      `SELECT ALIAS_1._ID AS "ALIAS_1__ID", ALIAS_1._createdAt AS "ALIAS_1__createdAt", ALIAS_1._createdBy AS "ALIAS_1__createdBy", ALIAS_1._modifiedAt AS "ALIAS_1__modifiedAt", ALIAS_1._modifiedBy AS "ALIAS_1__modifiedBy", ALIAS_1._log_ID AS "ALIAS_1__log_ID", ALIAS_1._rule_ID AS "ALIAS_1__rule_ID", ALIAS_1._state AS "ALIAS_1__state", ALIAS_1.SimplifiedCoveredTaxes AS "ALIAS_1_SimplifiedCoveredTaxes", ALIAS_1.FiscalYear AS "ALIAS_1_FiscalYear", ALIAS_1.SafeHarborDeMinimisCheck AS "ALIAS_1_SafeHarborDeMinimisCheck", ALIAS_1.Version AS "ALIAS_1_Version", ALIAS_1.RunScenario_Code AS "ALIAS_1_RunScenario_Code", ALIAS_1.RunFiscalYear AS "ALIAS_1_RunFiscalYear", ALIAS_1.CountryRegion_Code AS "ALIAS_1_CountryRegion_Code", ALIAS_1.DeMinimisRevenueForSafeHarbor AS "ALIAS_1_DeMinimisRevenueForSafeHarbor", ALIAS_1.PillarGroup_Code AS "ALIAS_1_PillarGroup_Code", ALIAS_1.ThresholdValueRevenue AS "ALIAS_1_ThresholdValueRevenue", ALIAS_1.SafeHarborETRCheck AS "ALIAS_1_SafeHarborETRCheck", ALIAS_1.RoutineProfitDifference AS "ALIAS_1_RoutineProfitDifference", ALIAS_1.SafeHarborSBIECheck AS "ALIAS_1_SafeHarborSBIECheck", ALIAS_1.TotalCarveOut AS "ALIAS_1_TotalCarveOut", ALIAS_1.ThresholdValueEBT AS "ALIAS_1_ThresholdValueEBT", ALIAS_1.ProfitBeforeIncomeTaxes AS "ALIAS_1_ProfitBeforeIncomeTaxes", ALIAS_1.SimplifiedETR AS "ALIAS_1_SimplifiedETR", ALIAS_1.GroupCurrency_Code AS "ALIAS_1_GroupCurrency_Code", ALIAS_1._function_ID AS "ALIAS_1__function_ID", b._createdAt AS "b__createdAt", b._createdBy AS "b__createdBy", b._modifiedAt AS "b__modifiedAt", b._modifiedBy AS "b__modifiedBy", b._log_ID AS "b__log_ID", b._rule_ID AS "b__rule_ID", b._state AS "b__state", b.Code AS "b_Code", b.Description AS "b_Description", ? AS "b__function_ID", c._createdAt AS "c__createdAt", c._createdBy AS "c__createdBy", c._modifiedAt AS "c__modifiedAt", c._modifiedBy AS "c__modifiedBy", c._log_ID AS "c__log_ID", c._rule_ID AS "c__rule_ID", c._state AS "c__state", c.Description AS "c_Description", c.Code AS "c_Code", ? AS "c__function_ID", true AS "c_IsActiveEntity", null AS "c_HasActiveEntity", null AS "c_HasDraftEntity", d._createdAt AS "d__createdAt", d._createdBy AS "d__createdBy", d._modifiedAt AS "d__modifiedAt", d._modifiedBy AS "d__modifiedBy", d._log_ID AS "d__log_ID", d._rule_ID AS "d__rule_ID", d._state AS "d__state", d.PillarCircle_Code AS "d_PillarCircle_Code", d.Code AS "d_Code", d.Description AS "d_Description", ? AS "d__function_ID", e._createdAt AS "e__createdAt", e._createdBy AS "e__createdBy", e._modifiedAt AS "e__modifiedAt", e._modifiedBy AS "e__modifiedBy", e._log_ID AS "e__log_ID", e._rule_ID AS "e__rule_ID", e._state AS "e__state", e.Description AS "e_Description", e.Code AS "e_Code", ? AS "e__function_ID" FROM z_Ext_SBEPS_JoinAllSH ALIAS_1 LEFT JOIN z_Ext_SBEPS_RunScenarios b ON ( b.Code = ALIAS_1.RunScenario_Code ) LEFT JOIN z_Ext_SBEPS_CountriesRegions c ON ( c.Code = ALIAS_1.CountryRegion_Code ) LEFT JOIN z_Ext_SBEPS_PillarGroups d ON ( d.Code = ALIAS_1.PillarGroup_Code ) LEFT JOIN z_Ext_SBEPS_Currencies e ON ( e.Code = ALIAS_1.GroupCurrency_Code ) ORDER BY ALIAS_1._ID ASC LIMIT 50  with parameters ('LOCALE' = 'en')`,
      [
        '00000000-0000-0000-0000-000000000000',
        '00000000-0000-0000-0000-000000000000',
        '00000000-0000-0000-0000-000000000000',
        '00000000-0000-0000-0000-000000000000'
      ],
      function (err, result) {
        if (err) throw err;
        console.log(JSON.stringify(result));
        conn.disconnect();
      }
    );
  // // it does NOT work as prepared statement either ...
  // conn.prepare(`SELECT ALIAS_1._ID AS "ALIAS_1__ID", ALIAS_1._createdAt AS "ALIAS_1__createdAt", ALIAS_1._createdBy AS "ALIAS_1__createdBy", ALIAS_1._modifiedAt AS "ALIAS_1__modifiedAt", ALIAS_1._modifiedBy AS "ALIAS_1__modifiedBy", ALIAS_1._log_ID AS "ALIAS_1__log_ID", ALIAS_1._rule_ID AS "ALIAS_1__rule_ID", ALIAS_1._state AS "ALIAS_1__state", ALIAS_1.SimplifiedCoveredTaxes AS "ALIAS_1_SimplifiedCoveredTaxes", ALIAS_1.FiscalYear AS "ALIAS_1_FiscalYear", ALIAS_1.SafeHarborDeMinimisCheck AS "ALIAS_1_SafeHarborDeMinimisCheck", ALIAS_1.Version AS "ALIAS_1_Version", ALIAS_1.RunScenario_Code AS "ALIAS_1_RunScenario_Code", ALIAS_1.RunFiscalYear AS "ALIAS_1_RunFiscalYear", ALIAS_1.CountryRegion_Code AS "ALIAS_1_CountryRegion_Code", ALIAS_1.DeMinimisRevenueForSafeHarbor AS "ALIAS_1_DeMinimisRevenueForSafeHarbor", ALIAS_1.PillarGroup_Code AS "ALIAS_1_PillarGroup_Code", ALIAS_1.ThresholdValueRevenue AS "ALIAS_1_ThresholdValueRevenue", ALIAS_1.SafeHarborETRCheck AS "ALIAS_1_SafeHarborETRCheck", ALIAS_1.RoutineProfitDifference AS "ALIAS_1_RoutineProfitDifference", ALIAS_1.SafeHarborSBIECheck AS "ALIAS_1_SafeHarborSBIECheck", ALIAS_1.TotalCarveOut AS "ALIAS_1_TotalCarveOut", ALIAS_1.ThresholdValueEBT AS "ALIAS_1_ThresholdValueEBT", ALIAS_1.ProfitBeforeIncomeTaxes AS "ALIAS_1_ProfitBeforeIncomeTaxes", ALIAS_1.SimplifiedETR AS "ALIAS_1_SimplifiedETR", ALIAS_1.GroupCurrency_Code AS "ALIAS_1_GroupCurrency_Code", ALIAS_1._function_ID AS "ALIAS_1__function_ID", b._createdAt AS "b__createdAt", b._createdBy AS "b__createdBy", b._modifiedAt AS "b__modifiedAt", b._modifiedBy AS "b__modifiedBy", b._log_ID AS "b__log_ID", b._rule_ID AS "b__rule_ID", b._state AS "b__state", b.Code AS "b_Code", b.Description AS "b_Description", ? AS "b__function_ID", c._createdAt AS "c__createdAt", c._createdBy AS "c__createdBy", c._modifiedAt AS "c__modifiedAt", c._modifiedBy AS "c__modifiedBy", c._log_ID AS "c__log_ID", c._rule_ID AS "c__rule_ID", c._state AS "c__state", c.Description AS "c_Description", c.Code AS "c_Code", ? AS "c__function_ID", true AS "c_IsActiveEntity", null AS "c_HasActiveEntity", null AS "c_HasDraftEntity", d._createdAt AS "d__createdAt", d._createdBy AS "d__createdBy", d._modifiedAt AS "d__modifiedAt", d._modifiedBy AS "d__modifiedBy", d._log_ID AS "d__log_ID", d._rule_ID AS "d__rule_ID", d._state AS "d__state", d.PillarCircle_Code AS "d_PillarCircle_Code", d.Code AS "d_Code", d.Description AS "d_Description", ? AS "d__function_ID", e._createdAt AS "e__createdAt", e._createdBy AS "e__createdBy", e._modifiedAt AS "e__modifiedAt", e._modifiedBy AS "e__modifiedBy", e._log_ID AS "e__log_ID", e._rule_ID AS "e__rule_ID", e._state AS "e__state", e.Description AS "e_Description", e.Code AS "e_Code", ? AS "e__function_ID" FROM z_Ext_SBEPS_JoinAllSH ALIAS_1 LEFT JOIN z_Ext_SBEPS_RunScenarios b ON ( b.Code = ALIAS_1.RunScenario_Code ) LEFT JOIN z_Ext_SBEPS_CountriesRegions c ON ( c.Code = ALIAS_1.CountryRegion_Code ) LEFT JOIN z_Ext_SBEPS_PillarGroups d ON ( d.Code = ALIAS_1.PillarGroup_Code ) LEFT JOIN z_Ext_SBEPS_Currencies e ON ( e.Code = ALIAS_1.GroupCurrency_Code ) ORDER BY ALIAS_1._ID ASC LIMIT 50  with parameters ('LOCALE' = 'en')`);
  // stmt.execQuery(['00000000-0000-0000-0000-000000000000','00000000-0000-0000-0000-000000000000','00000000-0000-0000-0000-000000000000','00000000-0000-0000-0000-000000000000'], function(err, rs) {
  //   if (err) throw err;
  //     var rows = [];
  //     while (rs.next()) {
  //       rows.push(rs.getValues());
  //     }
  //   console.log("Rows: ", rows);
  // });
});